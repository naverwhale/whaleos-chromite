# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from chromite.contrib.sdk_server.grpc_server import sdk_server_pb2 as sdk__server__pb2


class sdk_server_serviceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.cros_workon_start = channel.unary_unary(
        '/cros_sdk.sdk_server_service/cros_workon_start',
        request_serializer=sdk__server__pb2.WorkonStartRequest.SerializeToString,
        response_deserializer=sdk__server__pb2.WorkonStartResponse.FromString,
        )
    self.cros_workon_stop = channel.unary_unary(
        '/cros_sdk.sdk_server_service/cros_workon_stop',
        request_serializer=sdk__server__pb2.WorkonStopRequest.SerializeToString,
        response_deserializer=sdk__server__pb2.WorkonStopResponse.FromString,
        )
    self.cros_workon_list = channel.unary_unary(
        '/cros_sdk.sdk_server_service/cros_workon_list',
        request_serializer=sdk__server__pb2.WorkonListRequest.SerializeToString,
        response_deserializer=sdk__server__pb2.WorkonListResponse.FromString,
        )
    self.cros_workon_info = channel.unary_unary(
        '/cros_sdk.sdk_server_service/cros_workon_info',
        request_serializer=sdk__server__pb2.WorkonInfoRequest.SerializeToString,
        response_deserializer=sdk__server__pb2.WorkonInfoResponse.FromString,
        )
    self.all_packages = channel.unary_unary(
        '/cros_sdk.sdk_server_service/all_packages',
        request_serializer=sdk__server__pb2.AllPackagesRequest.SerializeToString,
        response_deserializer=sdk__server__pb2.AllPackagesResponse.FromString,
        )
    self.repo_sync = channel.unary_stream(
        '/cros_sdk.sdk_server_service/repo_sync',
        request_serializer=sdk__server__pb2.RepoSyncRequest.SerializeToString,
        response_deserializer=sdk__server__pb2.RepoSyncResponse.FromString,
        )
    self.repo_status = channel.unary_unary(
        '/cros_sdk.sdk_server_service/repo_status',
        request_serializer=sdk__server__pb2.RepoStatusRequest.SerializeToString,
        response_deserializer=sdk__server__pb2.RepoStatusResponse.FromString,
        )
    self.update_chroot = channel.unary_stream(
        '/cros_sdk.sdk_server_service/update_chroot',
        request_serializer=sdk__server__pb2.UpdateChrootRequest.SerializeToString,
        response_deserializer=sdk__server__pb2.UpdateChrootResponse.FromString,
        )
    self.build_packages = channel.unary_stream(
        '/cros_sdk.sdk_server_service/build_packages',
        request_serializer=sdk__server__pb2.BuildPackagesRequest.SerializeToString,
        response_deserializer=sdk__server__pb2.BuildPackagesResponse.FromString,
        )
    self.create_sdk = channel.unary_stream(
        '/cros_sdk.sdk_server_service/create_sdk',
        request_serializer=sdk__server__pb2.CreateSdkRequest.SerializeToString,
        response_deserializer=sdk__server__pb2.CreateSdkResponse.FromString,
        )
    self.delete_sdk = channel.unary_stream(
        '/cros_sdk.sdk_server_service/delete_sdk',
        request_serializer=sdk__server__pb2.DeleteSdkRequest.SerializeToString,
        response_deserializer=sdk__server__pb2.DeleteSdkResponse.FromString,
        )
    self.replace_sdk = channel.unary_stream(
        '/cros_sdk.sdk_server_service/replace_sdk',
        request_serializer=sdk__server__pb2.ReplaceSdkRequest.SerializeToString,
        response_deserializer=sdk__server__pb2.ReplaceSdkResponse.FromString,
        )
    self.build_image = channel.unary_stream(
        '/cros_sdk.sdk_server_service/build_image',
        request_serializer=sdk__server__pb2.BuildImageRequest.SerializeToString,
        response_deserializer=sdk__server__pb2.BuildImageResponse.FromString,
        )
    self.query_boards = channel.unary_unary(
        '/cros_sdk.sdk_server_service/query_boards',
        request_serializer=sdk__server__pb2.QueryBoardsRequest.SerializeToString,
        response_deserializer=sdk__server__pb2.QueryBoardsResponse.FromString,
        )
    self.current_boards = channel.unary_unary(
        '/cros_sdk.sdk_server_service/current_boards',
        request_serializer=sdk__server__pb2.CurrentBoardsRequest.SerializeToString,
        response_deserializer=sdk__server__pb2.CurrentBoardsResponse.FromString,
        )
    self.get_logs = channel.unary_unary(
        '/cros_sdk.sdk_server_service/get_logs',
        request_serializer=sdk__server__pb2.LogsRequest.SerializeToString,
        response_deserializer=sdk__server__pb2.LogsResponse.FromString,
        )
    self.chroot_info = channel.unary_unary(
        '/cros_sdk.sdk_server_service/chroot_info',
        request_serializer=sdk__server__pb2.ChrootInfoRequest.SerializeToString,
        response_deserializer=sdk__server__pb2.ChrootInfoResponse.FromString,
        )
    self.clear_logs = channel.unary_unary(
        '/cros_sdk.sdk_server_service/clear_logs',
        request_serializer=sdk__server__pb2.ClearLogsRequest.SerializeToString,
        response_deserializer=sdk__server__pb2.ClearLogsResponse.FromString,
        )
    self.get_methods = channel.unary_unary(
        '/cros_sdk.sdk_server_service/get_methods',
        request_serializer=sdk__server__pb2.MethodsRequest.SerializeToString,
        response_deserializer=sdk__server__pb2.MethodsResponse.FromString,
        )
    self.custom_endpoint = channel.unary_stream(
        '/cros_sdk.sdk_server_service/custom_endpoint',
        request_serializer=sdk__server__pb2.CustomRequest.SerializeToString,
        response_deserializer=sdk__server__pb2.CustomResponse.FromString,
        )


class sdk_server_serviceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def cros_workon_start(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def cros_workon_stop(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def cros_workon_list(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def cros_workon_info(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def all_packages(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def repo_sync(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def repo_status(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def update_chroot(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def build_packages(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def create_sdk(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def delete_sdk(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def replace_sdk(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def build_image(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def query_boards(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def current_boards(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_logs(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def chroot_info(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def clear_logs(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def get_methods(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def custom_endpoint(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_sdk_server_serviceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'cros_workon_start': grpc.unary_unary_rpc_method_handler(
          servicer.cros_workon_start,
          request_deserializer=sdk__server__pb2.WorkonStartRequest.FromString,
          response_serializer=sdk__server__pb2.WorkonStartResponse.SerializeToString,
      ),
      'cros_workon_stop': grpc.unary_unary_rpc_method_handler(
          servicer.cros_workon_stop,
          request_deserializer=sdk__server__pb2.WorkonStopRequest.FromString,
          response_serializer=sdk__server__pb2.WorkonStopResponse.SerializeToString,
      ),
      'cros_workon_list': grpc.unary_unary_rpc_method_handler(
          servicer.cros_workon_list,
          request_deserializer=sdk__server__pb2.WorkonListRequest.FromString,
          response_serializer=sdk__server__pb2.WorkonListResponse.SerializeToString,
      ),
      'cros_workon_info': grpc.unary_unary_rpc_method_handler(
          servicer.cros_workon_info,
          request_deserializer=sdk__server__pb2.WorkonInfoRequest.FromString,
          response_serializer=sdk__server__pb2.WorkonInfoResponse.SerializeToString,
      ),
      'all_packages': grpc.unary_unary_rpc_method_handler(
          servicer.all_packages,
          request_deserializer=sdk__server__pb2.AllPackagesRequest.FromString,
          response_serializer=sdk__server__pb2.AllPackagesResponse.SerializeToString,
      ),
      'repo_sync': grpc.unary_stream_rpc_method_handler(
          servicer.repo_sync,
          request_deserializer=sdk__server__pb2.RepoSyncRequest.FromString,
          response_serializer=sdk__server__pb2.RepoSyncResponse.SerializeToString,
      ),
      'repo_status': grpc.unary_unary_rpc_method_handler(
          servicer.repo_status,
          request_deserializer=sdk__server__pb2.RepoStatusRequest.FromString,
          response_serializer=sdk__server__pb2.RepoStatusResponse.SerializeToString,
      ),
      'update_chroot': grpc.unary_stream_rpc_method_handler(
          servicer.update_chroot,
          request_deserializer=sdk__server__pb2.UpdateChrootRequest.FromString,
          response_serializer=sdk__server__pb2.UpdateChrootResponse.SerializeToString,
      ),
      'build_packages': grpc.unary_stream_rpc_method_handler(
          servicer.build_packages,
          request_deserializer=sdk__server__pb2.BuildPackagesRequest.FromString,
          response_serializer=sdk__server__pb2.BuildPackagesResponse.SerializeToString,
      ),
      'create_sdk': grpc.unary_stream_rpc_method_handler(
          servicer.create_sdk,
          request_deserializer=sdk__server__pb2.CreateSdkRequest.FromString,
          response_serializer=sdk__server__pb2.CreateSdkResponse.SerializeToString,
      ),
      'delete_sdk': grpc.unary_stream_rpc_method_handler(
          servicer.delete_sdk,
          request_deserializer=sdk__server__pb2.DeleteSdkRequest.FromString,
          response_serializer=sdk__server__pb2.DeleteSdkResponse.SerializeToString,
      ),
      'replace_sdk': grpc.unary_stream_rpc_method_handler(
          servicer.replace_sdk,
          request_deserializer=sdk__server__pb2.ReplaceSdkRequest.FromString,
          response_serializer=sdk__server__pb2.ReplaceSdkResponse.SerializeToString,
      ),
      'build_image': grpc.unary_stream_rpc_method_handler(
          servicer.build_image,
          request_deserializer=sdk__server__pb2.BuildImageRequest.FromString,
          response_serializer=sdk__server__pb2.BuildImageResponse.SerializeToString,
      ),
      'query_boards': grpc.unary_unary_rpc_method_handler(
          servicer.query_boards,
          request_deserializer=sdk__server__pb2.QueryBoardsRequest.FromString,
          response_serializer=sdk__server__pb2.QueryBoardsResponse.SerializeToString,
      ),
      'current_boards': grpc.unary_unary_rpc_method_handler(
          servicer.current_boards,
          request_deserializer=sdk__server__pb2.CurrentBoardsRequest.FromString,
          response_serializer=sdk__server__pb2.CurrentBoardsResponse.SerializeToString,
      ),
      'get_logs': grpc.unary_unary_rpc_method_handler(
          servicer.get_logs,
          request_deserializer=sdk__server__pb2.LogsRequest.FromString,
          response_serializer=sdk__server__pb2.LogsResponse.SerializeToString,
      ),
      'chroot_info': grpc.unary_unary_rpc_method_handler(
          servicer.chroot_info,
          request_deserializer=sdk__server__pb2.ChrootInfoRequest.FromString,
          response_serializer=sdk__server__pb2.ChrootInfoResponse.SerializeToString,
      ),
      'clear_logs': grpc.unary_unary_rpc_method_handler(
          servicer.clear_logs,
          request_deserializer=sdk__server__pb2.ClearLogsRequest.FromString,
          response_serializer=sdk__server__pb2.ClearLogsResponse.SerializeToString,
      ),
      'get_methods': grpc.unary_unary_rpc_method_handler(
          servicer.get_methods,
          request_deserializer=sdk__server__pb2.MethodsRequest.FromString,
          response_serializer=sdk__server__pb2.MethodsResponse.SerializeToString,
      ),
      'custom_endpoint': grpc.unary_stream_rpc_method_handler(
          servicer.custom_endpoint,
          request_deserializer=sdk__server__pb2.CustomRequest.FromString,
          response_serializer=sdk__server__pb2.CustomResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'cros_sdk.sdk_server_service', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
